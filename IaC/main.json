{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.14.85.62628",
      "templateHash": "12941017691567404589"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "appName": {
      "type": "string",
      "defaultValue": "Azure OpenAI Demo"
    },
    "createdBy": {
      "type": "string",
      "defaultValue": "Randy Pagels"
    },
    "costCenter": {
      "type": "string",
      "defaultValue": "MS-AZR-RP"
    },
    "Deployed_Environment": {
      "type": "string"
    },
    "kvValue_ApimSubscriptionKeyName": {
      "type": "string",
      "defaultValue": "ApimSubscriptionKey"
    },
    "kvValue_OpenAIKeyName": {
      "type": "string",
      "defaultValue": "OpenAIAPIKey"
    },
    "kvValue_OpenAIKeyValue": {
      "type": "string",
      "defaultValue": "<OPENAI_APIKEY>"
    },
    "kvValue_AzureWebJobsStorageName": {
      "type": "string",
      "defaultValue": "AzureWebJobsStorage"
    },
    "kvValue_WebsiteContentAzureFileConnectionString": {
      "type": "string",
      "defaultValue": "WebsiteContentAzureFileConnectionString"
    },
    "AzObjectIdPagels": {
      "type": "string",
      "defaultValue": "197b8610-80f8-4317-b9c4-06e5b3246e87"
    },
    "ADOServiceprincipalObjectId": {
      "type": "string",
      "defaultValue": "61ad559f-a07a-4d8f-981b-c88e69216dd1"
    }
  },
  "variables": {
    "webAppPlanName": "[format('plan-{0}', uniqueString(resourceGroup().id))]",
    "webSiteName": "[format('app-{0}', uniqueString(resourceGroup().id))]",
    "appInsightsName": "[format('appi-{0}', uniqueString(resourceGroup().id))]",
    "appInsightsWorkspaceName": "[format('appw-{0}', uniqueString(resourceGroup().id))]",
    "appInsightsAlertName": "[format('ResponseTime-{0}', uniqueString(resourceGroup().id))]",
    "functionAppName": "[format('func-{0}', uniqueString(resourceGroup().id))]",
    "functionAppServiceName": "[format('funcplan-{0}', uniqueString(resourceGroup().id))]",
    "apiServiceName": "[format('apim-{0}', uniqueString(resourceGroup().id))]",
    "keyvaultName": "[format('kv-{0}', uniqueString(resourceGroup().id))]",
    "cognitiveServiceName": "[format('openai-{0}', uniqueString(resourceGroup().id))]",
    "defaultTags": {
      "Env": "[parameters('Deployed_Environment')]",
      "App": "[parameters('appName')]",
      "CostCenter": "[parameters('costCenter')]",
      "CreatedBy": "[parameters('createdBy')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[variables('keyvaultName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vaultName": {
            "value": "[variables('keyvaultName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.85.62628",
              "templateHash": "2322361648483403722"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "vaultName": {
              "type": "string"
            },
            "tenant": {
              "type": "string",
              "defaultValue": "[subscription().tenantId]"
            },
            "accessPolicies": {
              "type": "array",
              "defaultValue": []
            },
            "networkAcls": {
              "type": "object",
              "defaultValue": {
                "ipRules": [],
                "virtualNetworkRules": []
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-11-01-preview",
              "name": "[parameters('vaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "tenantId": "[parameters('tenant')]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "enableSoftDelete": false,
                "accessPolicies": "[parameters('accessPolicies')]",
                "enabledForDeployment": true,
                "enabledForDiskEncryption": true,
                "enabledForTemplateDeployment": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false,
                "networkAcls": "[parameters('networkAcls')]"
              }
            }
          ],
          "outputs": {
            "proxyKey": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('vaultName')), '2021-11-01-preview', 'full')]"
            },
            "keyvaultName": {
              "type": "string",
              "value": "[parameters('vaultName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "webappdeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "webAppPlanName": {
            "value": "[variables('webAppPlanName')]"
          },
          "webSiteName": {
            "value": "[variables('webSiteName')]"
          },
          "resourceGroupName": {
            "value": "[resourceGroup().name]"
          },
          "Deployed_Environment": {
            "value": "[parameters('Deployed_Environment')]"
          },
          "appInsightsName": {
            "value": "[variables('appInsightsName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "appInsightsInstrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-10-01').outputs.out_appInsightsInstrumentationKey.value]"
          },
          "appInsightsConnectionString": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-10-01').outputs.out_appInsightsConnectionString.value]"
          },
          "defaultTags": {
            "value": "[variables('defaultTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.85.62628",
              "templateHash": "10757169164850945032"
            }
          },
          "parameters": {
            "skuName": {
              "type": "string",
              "defaultValue": "S1"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "Deployed_Environment": {
              "type": "string"
            },
            "webAppPlanName": {
              "type": "string"
            },
            "webSiteName": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "appInsightsName": {
              "type": "string"
            },
            "appInsightsInstrumentationKey": {
              "type": "string"
            },
            "appInsightsConnectionString": {
              "type": "string"
            },
            "defaultTags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[parameters('webAppPlanName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('defaultTags')]",
              "properties": {},
              "sku": {
                "name": "[parameters('skuName')]"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[parameters('webSiteName')]",
              "location": "[parameters('location')]",
              "kind": "app",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": "[parameters('defaultTags')]",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('webAppPlanName'))]",
                "httpsOnly": true,
                "siteConfig": {
                  "minTlsVersion": "1.2",
                  "healthCheckPath": "/healthy"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('webAppPlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('webSiteName'), 'appsettings')]",
              "properties": {
                "DeployedEnvironment": "[parameters('Deployed_Environment')]",
                "WEBSITE_RUN_FROM_PACKAGE": "1",
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[parameters('appInsightsInstrumentationKey')]",
                "APPINSIGHTS_PROFILERFEATURE_VERSION": "1.0.0",
                "APPINSIGHTS_SNAPSHOTFEATURE_VERSION": "1.0.0",
                "APPLICATIONINSIGHTS_CONNECTION_STRING": "[parameters('appInsightsConnectionString')]",
                "WebAppUrl": "[format('https://{0}.azurewebsites.net/', parameters('webSiteName'))]",
                "ASPNETCORE_ENVIRONMENT": "Development"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webSiteName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/webtests",
              "apiVersion": "2022-06-15",
              "name": "Page Home",
              "location": "[parameters('location')]",
              "tags": {
                "[format('hidden-link:{0}/resourceGroups/{1}/providers/microsoft.insights/components/{2}', subscription().id, parameters('resourceGroupName'), parameters('appInsightsName'))]": "Resource"
              },
              "kind": "ping",
              "properties": {
                "SyntheticMonitorId": "[parameters('appInsightsName')]",
                "Name": "Page Home",
                "Description": null,
                "Enabled": true,
                "Frequency": 300,
                "Timeout": 120,
                "Kind": "standard",
                "RetryEnabled": true,
                "Locations": [
                  {
                    "Id": "us-va-ash-azr"
                  },
                  {
                    "Id": "us-fl-mia-edge"
                  },
                  {
                    "Id": "us-ca-sjc-azr"
                  },
                  {
                    "Id": "emea-au-syd-edge"
                  },
                  {
                    "Id": "apac-jp-kaw-edge"
                  }
                ],
                "Configuration": null,
                "Request": {
                  "RequestUrl": "[format('https://{0}.azurewebsites.net/', parameters('webSiteName'))]",
                  "Headers": null,
                  "HttpVerb": "GET",
                  "RequestBody": null,
                  "ParseDependentRequests": false,
                  "FollowRedirects": null
                },
                "ValidationRules": {
                  "ExpectedHttpStatusCode": 200,
                  "IgnoreHttpStatusCode": false,
                  "ContentValidation": null,
                  "SSLCheck": true,
                  "SSLCertRemainingLifetimeCheck": 7
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webSiteName'))]"
              ]
            }
          ],
          "outputs": {
            "out_appService": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/sites', parameters('webSiteName'))]"
            },
            "out_webSiteName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('webSiteName')), '2022-03-01').defaultHostName]"
            },
            "out_appServiceprincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('webSiteName')), '2022-03-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "appinsightsdeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "appInsightsName": {
            "value": "[variables('appInsightsName')]"
          },
          "defaultTags": {
            "value": "[variables('defaultTags')]"
          },
          "appInsightsAlertName": {
            "value": "[variables('appInsightsAlertName')]"
          },
          "appInsightsWorkspaceName": {
            "value": "[variables('appInsightsWorkspaceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.85.62628",
              "templateHash": "6852537958242339085"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "appInsightsName": {
              "type": "string"
            },
            "appInsightsWorkspaceName": {
              "type": "string"
            },
            "appInsightsAlertName": {
              "type": "string"
            },
            "defaultTags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[parameters('appInsightsWorkspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 30,
                "features": {
                  "searchVersion": 1,
                  "legacy": 0,
                  "enableLogAccessUsingOnlyResourcePermissions": true
                }
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('appInsightsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('defaultTags')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('appInsightsWorkspaceName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('appInsightsWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/metricAlerts",
              "apiVersion": "2018-03-01",
              "name": "[parameters('appInsightsAlertName')]",
              "location": "global",
              "properties": {
                "description": "Response time alert",
                "severity": 0,
                "enabled": true,
                "scopes": [
                  "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "criteria": {
                  "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
                  "allOf": [
                    {
                      "name": "1st criterion",
                      "metricName": "requests/duration",
                      "operator": "GreaterThan",
                      "threshold": 5000,
                      "timeAggregation": "Average",
                      "criterionType": "StaticThresholdCriterion"
                    }
                  ]
                },
                "actions": [
                  {
                    "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', format('ag--{0}', uniqueString(resourceGroup().id)))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
                "[resourceId('Microsoft.Insights/actionGroups', format('ag--{0}', uniqueString(resourceGroup().id)))]"
              ]
            },
            {
              "type": "Microsoft.Insights/actionGroups",
              "apiVersion": "2021-09-01",
              "name": "[format('ag--{0}', uniqueString(resourceGroup().id))]",
              "location": "global",
              "properties": {
                "groupShortName": "Randy Pagels",
                "enabled": true,
                "emailReceivers": [
                  {
                    "name": "Randy Pagels",
                    "emailAddress": "rpagels@microsoft.com",
                    "useCommonAlertSchema": true
                  }
                ]
              }
            }
          ],
          "outputs": {
            "out_applicationInsightsID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]"
            },
            "out_appInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            "out_appInsightsConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]"
            },
            "out_appInsightsApplicationId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ApplicationId]"
            },
            "out_appInsightsAPIApplicationId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').AppId]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "functionappdeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "functionAppServiceName": {
            "value": "[variables('functionAppServiceName')]"
          },
          "functionAppName": {
            "value": "[variables('functionAppName')]"
          },
          "defaultTags": {
            "value": "[variables('defaultTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.85.62628",
              "templateHash": "7384465935529696038"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "functionAppName": {
              "type": "string"
            },
            "functionAppServiceName": {
              "type": "string"
            },
            "defaultTags": {
              "type": "object"
            }
          },
          "variables": {
            "storageAccountName": "[format('sta{0}', uniqueString(resourceGroup().id))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-09-01",
              "name": "[variables('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "tags": "[parameters('defaultTags')]",
              "kind": "StorageV2",
              "properties": {
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "accessTier": "Hot"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2021-03-01",
              "name": "[parameters('functionAppServiceName')]",
              "location": "[parameters('location')]",
              "kind": "functionapp",
              "tags": "[parameters('defaultTags')]",
              "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
              },
              "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-03-01",
              "name": "[parameters('functionAppName')]",
              "location": "[parameters('location')]",
              "kind": "functionapp",
              "tags": "[parameters('defaultTags')]",
              "properties": {
                "enabled": true,
                "hostNameSslStates": [
                  {
                    "name": "[format('{0}.azurewebsites.net', parameters('functionAppName'))]",
                    "sslState": "Disabled",
                    "hostType": "Standard"
                  },
                  {
                    "name": "[format('{0}.scm.azurewebsites.net', parameters('functionAppName'))]",
                    "sslState": "Disabled",
                    "hostType": "Standard"
                  }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('functionAppServiceName'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('functionAppServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/{1}', parameters('functionAppName'), 'web')]",
              "properties": {
                "numberOfWorkers": -1,
                "defaultDocuments": [
                  "Default.htm",
                  "Default.html",
                  "Default.asp",
                  "index.htm",
                  "index.html",
                  "iisstart.htm",
                  "default.aspx",
                  "index.php",
                  "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "[format('${0}', parameters('functionAppName'))]",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                  {
                    "virtualPath": "/",
                    "physicalPath": "site\\wwwroot",
                    "preloadEnabled": true
                  }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                  "rampUpRules": []
                },
                "autoHealEnabled": false,
                "cors": {
                  "allowedOrigins": [
                    "https://functions.azure.com",
                    "https://functions-staging.azure.com",
                    "https://functions-next.azure.com"
                  ],
                  "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                  {
                    "ipAddress": "Any",
                    "action": "Allow",
                    "priority": 1,
                    "name": "Allow all",
                    "description": "Allow all access"
                  }
                ],
                "scmIpSecurityRestrictions": [
                  {
                    "ipAddress": "Any",
                    "action": "Allow",
                    "priority": 1,
                    "name": "Allow all",
                    "description": "Allow all access"
                  }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": true,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "preWarmedInstanceCount": 0
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/hostNameBindings",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/{1}', parameters('functionAppName'), format('{0}.azurewebsites.net', parameters('functionAppName')))]",
              "properties": {
                "siteName": "[parameters('functionAppName')]",
                "hostNameType": "Verified"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
              ]
            }
          ],
          "outputs": {
            "out_funcAppServiceprincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2021-03-01', 'full').identity.principalId]"
            },
            "out_AzureWebJobsStorage": {
              "type": "string",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-09-01').keys[0].value)]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[variables('apiServiceName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "defaultTags": {
            "value": "[variables('defaultTags')]"
          },
          "apiServiceName": {
            "value": "[variables('apiServiceName')]"
          },
          "appInsightsName": {
            "value": "[variables('appInsightsName')]"
          },
          "applicationInsightsID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-10-01').outputs.out_applicationInsightsID.value]"
          },
          "appInsightsInstrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-10-01').outputs.out_appInsightsInstrumentationKey.value]"
          },
          "webSiteName": {
            "value": "[variables('webSiteName')]"
          },
          "keyvaultName": {
            "value": "[variables('keyvaultName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.85.62628",
              "templateHash": "550524870072837111"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "apiServiceName": {
              "type": "string"
            },
            "appInsightsName": {
              "type": "string"
            },
            "applicationInsightsID": {
              "type": "string"
            },
            "appInsightsInstrumentationKey": {
              "type": "string"
            },
            "webSiteName": {
              "type": "string"
            },
            "keyvaultName": {
              "type": "string"
            },
            "defaultTags": {
              "type": "object"
            },
            "publisherEmail": {
              "type": "string",
              "defaultValue": "rpagels@microsoft.com",
              "minLength": 1
            },
            "publisherName": {
              "type": "string",
              "defaultValue": "Randy Pagels",
              "minLength": 1
            },
            "sku": {
              "type": "string",
              "defaultValue": "Developer",
              "allowedValues": [
                "Consumption",
                "Developer",
                "Basic",
                "Standard",
                "Premium"
              ]
            },
            "skuCount": {
              "type": "int",
              "defaultValue": 1
            }
          },
          "variables": {
            "$fxv#0": "<policies>\r\n    <inbound>\r\n        <base />\r\n        <rate-limit-by-key calls=\"20\" renewal-period=\"60\" counter-key=\"@(context.Subscription?.Key ?? \"anonymous\")\" />\r\n        <set-header name=\"Authorization\" exists-action=\"override\">\r\n            <value>Bearer {{ openai-api-key }}</value>\r\n        </set-header>\r\n        <set-header name=\"Content-Type\" exists-action=\"override\">\r\n            <value>application/json</value>\r\n        </set-header>\r\n    </inbound>\r\n    <backend>\r\n        <base />\r\n    </backend>\r\n    <outbound>\r\n        <base />\r\n    </outbound>\r\n    <on-error>\r\n        <base />\r\n    </on-error>\r\n</policies>",
            "$fxv#1": "<policies>\r\n    <inbound>\r\n        <base />\r\n        <set-body>@{\r\n            JObject requestBody = new JObject();\r\n            requestBody[\"prompt\"] = \"A cute baby tabby kitten\";\r\n            requestBody[\"n\"] = 2;\r\n            requestBody[\"size\"] = \"1024x1024\";\r\n            return requestBody.ToString();\r\n        }</set-body>\r\n    </inbound>\r\n    <backend>\r\n        <base />\r\n    </backend>\r\n    <outbound>\r\n        <base />\r\n    </outbound>\r\n    <on-error>\r\n        <base />\r\n    </on-error>\r\n</policies>",
            "$fxv#2": "<policies>\r\n    <inbound>\r\n        <base />\r\n        <set-body>@{\r\n            JObject requestBody = new JObject();\r\n            requestBody[\"prompt\"] = \"A cute baby tabby kitten\";\r\n            requestBody[\"image\"] = \"https://stablobcuj5ihe655xzo.blob.core.windows.net/images/cute-tabby-kitten.png\";\r\n            requestBody[\"n\"] = 2;\r\n            requestBody[\"size\"] = \"1024x1024\";\r\n            return requestBody.ToString();\r\n        }</set-body>\r\n        <set-header name=\"Content-Type\" exists-action=\"override\">\r\n            <value>multipart/form-data</value>\r\n        </set-header>\r\n    </inbound>\r\n    <backend>\r\n        <base />\r\n    </backend>\r\n    <outbound>\r\n        <base />\r\n    </outbound>\r\n    <on-error>\r\n        <base />\r\n    </on-error>\r\n</policies>",
            "$fxv#3": "<policies>\r\n    <inbound>\r\n        <base />\r\n        <set-body>@{\r\n            JObject requestBody = new JObject();\r\n            requestBody[\"prompt\"] = \"A cute baby tabby kitten\";\r\n            requestBody[\"image\"] = \"https://stablobcuj5ihe655xzo.blob.core.windows.net/images/cute-tabby-kitten.png\";\r\n            requestBody[\"n\"] = 2;\r\n            requestBody[\"size\"] = \"1024x1024\";\r\n            return requestBody.ToString();\r\n        }</set-body>\r\n        <set-header name=\"Content-Type\" exists-action=\"override\">\r\n            <value>multipart/form-data</value>\r\n        </set-header>\r\n    </inbound>\r\n    <backend>\r\n        <base />\r\n    </backend>\r\n    <outbound>\r\n        <base />\r\n    </outbound>\r\n    <on-error>\r\n        <base />\r\n    </on-error>\r\n</policies>",
            "$fxv#4": "<policies>\r\n    <inbound>\r\n        <base />\r\n        <set-body>@{\r\n            JObject requestBody = new JObject();\r\n            requestBody[\"prompt\"] = \"Say this is a test\";\r\n            requestBody[\"model\"] = \"text-davinci-003\";\r\n            requestBody[\"max_tokens\"] = 7;\r\n            requestBody[\"temperature\"] = 0;\r\n            return requestBody.ToString();\r\n        }</set-body>\r\n    </inbound>\r\n    <backend>\r\n        <base />\r\n    </backend>\r\n    <outbound>\r\n        <base />\r\n    </outbound>\r\n    <on-error>\r\n        <base />\r\n    </on-error>\r\n</policies>"
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service",
              "apiVersion": "2022-04-01-preview",
              "name": "[parameters('apiServiceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('defaultTags')]",
              "sku": {
                "name": "[parameters('sku')]",
                "capacity": "[parameters('skuCount')]"
              },
              "properties": {
                "publisherEmail": "[parameters('publisherEmail')]",
                "publisherName": "[parameters('publisherName')]"
              },
              "identity": {
                "type": "SystemAssigned"
              }
            },
            {
              "type": "Microsoft.ApiManagement/service/subscriptions",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/{1}', parameters('apiServiceName'), 'Developers')]",
              "properties": {
                "scope": "/apis",
                "displayName": "OpenAI Developers",
                "state": "active"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apiServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/products",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/{1}', parameters('apiServiceName'), 'Development')]",
              "properties": {
                "approvalRequired": false,
                "state": "published",
                "subscriptionRequired": true,
                "subscriptionsLimit": 1,
                "description": "Product used for OpenAI Development Teams",
                "displayName": "OpenAI Developers",
                "terms": "These are the terms of use ... .etc"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apiServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/policies",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('apiServiceName'), 'openai-team', 'policy')]",
              "properties": {
                "format": "rawxml",
                "value": "[variables('$fxv#0')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiServiceName'), 'openai-team')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/{1}', parameters('apiServiceName'), 'openai-team')]",
              "properties": {
                "displayName": "OpenAI Team",
                "description": "A sample API that uses a OpenAI as an example to demonstrate features.",
                "serviceUrl": "https://api.openai.com/v1",
                "path": "",
                "subscriptionRequired": true,
                "protocols": [
                  "https"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apiServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/products/apis",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('apiServiceName'), 'Development', 'openai-team')]",
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiServiceName'), 'openai-team')]",
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apiServiceName'), 'Development')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/loggers",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/{1}', parameters('apiServiceName'), parameters('appInsightsName'))]",
              "properties": {
                "loggerType": "applicationInsights",
                "description": "OpenAI Application Insights instance.",
                "resourceId": "[parameters('applicationInsightsID')]",
                "credentials": {
                  "instrumentationKey": "[parameters('appInsightsInstrumentationKey')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apiServiceName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/diagnostics",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('apiServiceName'), 'openai-team', 'applicationinsights')]",
              "properties": {
                "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', parameters('apiServiceName'), parameters('appInsightsName'))]",
                "alwaysLog": "allErrors",
                "logClientIp": true,
                "sampling": {
                  "samplingType": "fixed",
                  "percentage": 100
                },
                "verbosity": "information",
                "httpCorrelationProtocol": "Legacy",
                "frontend": {
                  "request": {
                    "headers": [],
                    "body": {
                      "bytes": 0
                    }
                  },
                  "response": {
                    "headers": [],
                    "body": {
                      "bytes": 0
                    }
                  }
                },
                "backend": {
                  "request": {
                    "headers": [],
                    "body": {
                      "bytes": 0
                    }
                  },
                  "response": {
                    "headers": [],
                    "body": {
                      "bytes": 0
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiServiceName'), 'openai-team')]",
                "[resourceId('Microsoft.ApiManagement/service/loggers', parameters('apiServiceName'), parameters('appInsightsName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('apiServiceName'), 'openai-team', 'ImageGenerationCreatePOST')]",
              "properties": {
                "displayName": "Image creating",
                "method": "POST",
                "urlTemplate": "/images/generations",
                "description": "Creating images from scratch based on a text prompt"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiServiceName'), 'openai-team')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations/policies",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/{1}/{2}/{3}', parameters('apiServiceName'), 'openai-team', 'ImageGenerationCreatePOST', 'policy')]",
              "properties": {
                "format": "rawxml",
                "value": "[variables('$fxv#1')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apiServiceName'), 'openai-team', 'ImageGenerationCreatePOST')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('apiServiceName'), 'openai-team', 'ImageGenerationEditPOST')]",
              "properties": {
                "displayName": "Image editing",
                "method": "POST",
                "urlTemplate": "/images/edits",
                "description": "Creating edits of an existing image based on a new text prompt"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiServiceName'), 'openai-team')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations/policies",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/{1}/{2}/{3}', parameters('apiServiceName'), 'openai-team', 'ImageGenerationEditPOST', 'policy')]",
              "properties": {
                "format": "rawxml",
                "value": "[variables('$fxv#2')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apiServiceName'), 'openai-team', 'ImageGenerationEditPOST')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('apiServiceName'), 'openai-team', 'ImageGenerationVariationPOST')]",
              "properties": {
                "displayName": "Image variation",
                "method": "POST",
                "urlTemplate": "/images/variations",
                "description": "Creates a variation of a given image"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiServiceName'), 'openai-team')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations/policies",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/{1}/{2}/{3}', parameters('apiServiceName'), 'openai-team', 'ImageGenerationVariationPOST', 'policy')]",
              "properties": {
                "format": "rawxml",
                "value": "[variables('$fxv#3')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apiServiceName'), 'openai-team', 'ImageGenerationVariationPOST')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('apiServiceName'), 'openai-team', 'CompletionsPOST')]",
              "properties": {
                "displayName": "Predicted completions",
                "method": "POST",
                "urlTemplate": "/completions",
                "description": "Return one or more predicted completions"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiServiceName'), 'openai-team')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations/policies",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/{1}/{2}/{3}', parameters('apiServiceName'), 'openai-team', 'CompletionsPOST', 'policy')]",
              "properties": {
                "format": "rawxml",
                "value": "[variables('$fxv#4')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apiServiceName'), 'openai-team', 'CompletionsPOST')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis",
              "apiVersion": "2022-04-01-preview",
              "name": "[format('{0}/PetStoreSwaggerImportExample', parameters('apiServiceName'))]",
              "properties": {
                "format": "swagger-link-json",
                "value": "http://petstore.swagger.io/v2/swagger.json",
                "path": "examplepetstore"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apiServiceName'))]"
              ]
            }
          ],
          "outputs": {
            "out_ApimSubscriptionKeyString": {
              "type": "string",
              "value": "[listSecrets(resourceId('Microsoft.ApiManagement/service/subscriptions', parameters('apiServiceName'), 'Developers'), '2022-04-01-preview').primaryKey]"
            },
            "out_ApimWebServiceURL": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apiServiceName')), '2022-04-01-preview').gatewayUrl]"
            },
            "out_ApiManagementprincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apiServiceName')), '2022-04-01-preview', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy')]",
        "[resourceId('Microsoft.Resources/deployments', variables('keyvaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "configSettings",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyvaultName": {
            "value": "[variables('keyvaultName')]"
          },
          "appServiceprincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'webappdeploy'), '2020-10-01').outputs.out_appServiceprincipalId.value]"
          },
          "webappName": {
            "value": "[variables('webSiteName')]"
          },
          "functionAppName": {
            "value": "[variables('functionAppName')]"
          },
          "funcAppServiceprincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'functionappdeploy'), '2020-10-01').outputs.out_funcAppServiceprincipalId.value]"
          },
          "ApiManagementprincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('apiServiceName')), '2020-10-01').outputs.out_ApiManagementprincipalId.value]"
          },
          "kvValue_AzureWebJobsStorageName": {
            "value": "[parameters('kvValue_AzureWebJobsStorageName')]"
          },
          "kvValue_AzureWebJobsStorageValue": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'functionappdeploy'), '2020-10-01').outputs.out_AzureWebJobsStorage.value]"
          },
          "kvValue_WebsiteContentAzureFileConnectionStringName": {
            "value": "[parameters('kvValue_WebsiteContentAzureFileConnectionString')]"
          },
          "kvValue_ApimSubscriptionKeyName": {
            "value": "[parameters('kvValue_ApimSubscriptionKeyName')]"
          },
          "kvValue_ApimSubscriptionKeyValue": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('apiServiceName')), '2020-10-01').outputs.out_ApimSubscriptionKeyString.value]"
          },
          "kvValue_OpenAIKeyStringName": {
            "value": "[parameters('kvValue_OpenAIKeyName')]"
          },
          "kvValue_OpenAIKeyValue": {
            "value": "[parameters('kvValue_OpenAIKeyValue')]"
          },
          "appInsightsInstrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-10-01').outputs.out_appInsightsInstrumentationKey.value]"
          },
          "appInsightsConnectionString": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-10-01').outputs.out_appInsightsConnectionString.value]"
          },
          "Deployed_Environment": {
            "value": "[parameters('Deployed_Environment')]"
          },
          "ApimWebServiceURL": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('apiServiceName')), '2020-10-01').outputs.out_ApimWebServiceURL.value]"
          },
          "AzObjectIdPagels": {
            "value": "[parameters('AzObjectIdPagels')]"
          },
          "ADOServiceprincipalObjectId": {
            "value": "[parameters('ADOServiceprincipalObjectId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.85.62628",
              "templateHash": "7171772836176793919"
            }
          },
          "parameters": {
            "keyvaultName": {
              "type": "string"
            },
            "webappName": {
              "type": "string"
            },
            "functionAppName": {
              "type": "string"
            },
            "kvValue_AzureWebJobsStorageName": {
              "type": "string"
            },
            "kvValue_ApimSubscriptionKeyName": {
              "type": "string"
            },
            "kvValue_WebsiteContentAzureFileConnectionStringName": {
              "type": "string"
            },
            "appInsightsInstrumentationKey": {
              "type": "string"
            },
            "appInsightsConnectionString": {
              "type": "string"
            },
            "ApimWebServiceURL": {
              "type": "string"
            },
            "Deployed_Environment": {
              "type": "string"
            },
            "kvValue_OpenAIKeyStringName": {
              "type": "string"
            },
            "appServiceprincipalId": {
              "type": "securestring"
            },
            "funcAppServiceprincipalId": {
              "type": "securestring"
            },
            "ApiManagementprincipalId": {
              "type": "securestring"
            },
            "kvValue_AzureWebJobsStorageValue": {
              "type": "securestring"
            },
            "kvValue_ApimSubscriptionKeyValue": {
              "type": "securestring"
            },
            "kvValue_OpenAIKeyValue": {
              "type": "securestring"
            },
            "tenant": {
              "type": "string",
              "defaultValue": "[subscription().tenantId]"
            },
            "AzObjectIdPagels": {
              "type": "securestring"
            },
            "ADOServiceprincipalObjectId": {
              "type": "securestring"
            },
            "accessPolicies": {
              "type": "array",
              "defaultValue": [
                {
                  "tenantId": "[parameters('tenant')]",
                  "objectId": "[parameters('appServiceprincipalId')]",
                  "permissions": {
                    "keys": [
                      "get",
                      "list"
                    ],
                    "secrets": [
                      "get",
                      "list"
                    ]
                  }
                },
                {
                  "tenantId": "[parameters('tenant')]",
                  "objectId": "[parameters('funcAppServiceprincipalId')]",
                  "permissions": {
                    "keys": [
                      "get",
                      "list"
                    ],
                    "secrets": [
                      "get",
                      "list"
                    ]
                  }
                },
                {
                  "tenantId": "[parameters('tenant')]",
                  "objectId": "[parameters('ApiManagementprincipalId')]",
                  "permissions": {
                    "keys": [
                      "get",
                      "list"
                    ],
                    "secrets": [
                      "get",
                      "list"
                    ]
                  }
                },
                {
                  "tenantId": "[parameters('tenant')]",
                  "objectId": "[parameters('AzObjectIdPagels')]",
                  "permissions": {
                    "keys": [
                      "get",
                      "list"
                    ],
                    "secrets": [
                      "get",
                      "list",
                      "set",
                      "delete"
                    ]
                  }
                },
                {
                  "tenantId": "[parameters('tenant')]",
                  "objectId": "[parameters('ADOServiceprincipalObjectId')]",
                  "permissions": {
                    "keys": [
                      "get",
                      "list"
                    ],
                    "secrets": [
                      "get",
                      "list"
                    ]
                  }
                }
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/accessPolicies",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyvaultName'), 'add')]",
              "properties": {
                "accessPolicies": "[parameters('accessPolicies')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyvaultName'), parameters('kvValue_AzureWebJobsStorageName'))]",
              "properties": {
                "contentType": "text/plain",
                "value": "[parameters('kvValue_AzureWebJobsStorageValue')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyvaultName'), parameters('kvValue_WebsiteContentAzureFileConnectionStringName'))]",
              "properties": {
                "contentType": "text/plain",
                "value": "[parameters('kvValue_AzureWebJobsStorageValue')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyvaultName'), parameters('kvValue_ApimSubscriptionKeyName'))]",
              "properties": {
                "contentType": "text/plain",
                "value": "[parameters('kvValue_ApimSubscriptionKeyValue')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyvaultName'), parameters('kvValue_OpenAIKeyStringName'))]",
              "properties": {
                "contentType": "text/plain",
                "value": "[parameters('kvValue_OpenAIKeyValue')]"
              }
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('webappName'), 'appsettings')]",
              "properties": {
                "DeployedEnvironment": "[parameters('Deployed_Environment')]",
                "WEBSITE_RUN_FROM_PACKAGE": "1",
                "WEBSITE_SENTINEL": "1",
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[parameters('appInsightsInstrumentationKey')]",
                "APPINSIGHTS_PROFILERFEATURE_VERSION": "1.0.0",
                "APPINSIGHTS_SNAPSHOTFEATURE_VERSION": "1.0.0",
                "APPLICATIONINSIGHTS_CONNECTION_STRING": "[parameters('appInsightsConnectionString')]",
                "OpenAIAPIKey": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyvaultName'), parameters('kvValue_OpenAIKeyStringName'))]",
                "WebAppUrl": "[format('https://{0}.azurewebsites.net/', parameters('webappName'))]",
                "ASPNETCORE_ENVIRONMENT": "Development",
                "WEBSITE_ENABLE_SYNC_UPDATE_SITE": "true"
              }
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('functionAppName'), 'appsettings')]",
              "kind": "string",
              "properties": {
                "AzureWebJobsStorage": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyvaultName'), parameters('kvValue_AzureWebJobsStorageName'))]",
                "WebsiteContentAzureFileConnectionString": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyvaultName'), parameters('kvValue_WebsiteContentAzureFileConnectionStringName'))]",
                "ApimSubscriptionKey": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyvaultName'), parameters('kvValue_ApimSubscriptionKeyName'))]",
                "ApimWebServiceURL": "[parameters('ApimWebServiceURL')]",
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[parameters('appInsightsInstrumentationKey')]",
                "APPLICATIONINSIGHTS_CONNECTION_STRING": "[parameters('appInsightsConnectionString')]",
                "FUNCTIONS_WORKER_RUNTIME": "dotnet",
                "FUNCTIONS_EXTENSION_VERSION": "~4"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyvaultName'), parameters('kvValue_AzureWebJobsStorageName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyvaultName'), parameters('kvValue_WebsiteContentAzureFileConnectionStringName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('apiServiceName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy')]",
        "[resourceId('Microsoft.Resources/deployments', 'functionappdeploy')]",
        "[resourceId('Microsoft.Resources/deployments', variables('keyvaultName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'webappdeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "addRoleAssignments",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyvaultName": {
            "value": "[variables('keyvaultName')]"
          },
          "ApiManagementprincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('apiServiceName')), '2020-10-01').outputs.out_ApiManagementprincipalId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.14.85.62628",
              "templateHash": "13695012654000092452"
            }
          },
          "parameters": {
            "keyvaultName": {
              "type": "string"
            },
            "ApiManagementprincipalId": {
              "type": "securestring"
            },
            "roleDefinitionIdForReader": {
              "type": "string",
              "defaultValue": "acdd72a7-3385-48ef-bd42-f606fba81ae7"
            }
          },
          "variables": {
            "secretUserRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionIdForReader'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyvaultName'))]",
              "name": "[guid(resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName')), variables('secretUserRole'))]",
              "properties": {
                "principalId": "[parameters('ApiManagementprincipalId')]",
                "roleDefinitionId": "[variables('secretUserRole')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('apiServiceName'))]",
        "[resourceId('Microsoft.Resources/deployments', variables('keyvaultName'))]"
      ]
    }
  ],
  "outputs": {
    "out_webSiteName": {
      "type": "string",
      "value": "[variables('webSiteName')]"
    },
    "out_appInsightsName": {
      "type": "string",
      "value": "[variables('appInsightsName')]"
    },
    "out_functionAppName": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    },
    "out_apiServiceName": {
      "type": "string",
      "value": "[variables('apiServiceName')]"
    },
    "out_apimSubscriptionKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('apiServiceName')), '2020-10-01').outputs.out_ApimSubscriptionKeyString.value]"
    },
    "out_OpenAIKeyValue": {
      "type": "string",
      "value": "[parameters('kvValue_OpenAIKeyValue')]"
    },
    "out_keyvaultName": {
      "type": "string",
      "value": "[variables('keyvaultName')]"
    },
    "out_appInsightsApplicationId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-10-01').outputs.out_appInsightsApplicationId.value]"
    },
    "out_appInsightsAPIApplicationId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-10-01').outputs.out_appInsightsAPIApplicationId.value]"
    }
  }
}