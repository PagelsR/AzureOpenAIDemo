name: Build Deploy Demo for OpenAI
on:
  push:
    branches:
      - master

  # Allow mannually trigger 
  workflow_dispatch: 
  
env:
  dotnet_version: '7.x.x'
  Azure_Resource_GroupName: 'rg-AzureOpenAIDemos'
  Azure_Resource_GroupLocation: 'eastus'
  CONFIGURATION: Release
  WORKING_DIRECTORY: .
  AZURE_CREDENTIALS_MCAPS: ${{ secrets.AZURE_CREDENTIALS_MCAPS }}

jobs:

  ################################################################
  # Stage: Deploy Infrastructure
  ################################################################  
  deploy_infrastructure:
    runs-on: ubuntu-latest
    outputs:
      output_webSiteName: ${{ steps.Infra.outputs.out_webSiteName }}
      output_keyvaultName: ${{ steps.Infra.outputs.out_keyvaultName }}

    name: Deploy Infrastructure
    steps:
    - uses: actions/checkout@master

    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ env.AZURE_CREDENTIALS_MCAPS }}

    # Check if Resource Group Exists
    - name: Ensure Resource Group Exists
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          #!/bin/bash
          az group create --name ${{ env.Azure_Resource_GroupName }} --location ${{ env.Azure_Resource_GroupLocation }}

    # Unlock Resource Group
    - name: Ensure Resource Group is UnLocked
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock delete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }}

    - name: Checkout
      uses: actions/checkout@v3

    - name: To be Purged soft-deleted instance of APIM
      #if: contains(github.event_name, 'push')
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az rest --method get --header "Accept=application/json" -u 'https://management.azure.com/subscriptions/7fcd5716-5f70-4baa-9a46-abda3869da7a/providers/Microsoft.ApiManagement/deletedservices?api-version=2022-04-01-preview'

    # - name: Set short git commit SHA
    #   id: vars
    #   run: |
    #     calculatedSha=$(git rev-parse --short ${{ github.sha }})
    #     echo "::set-output name=short_sha::$calculatedSha"

    # - name: Confirm git commit SHA output
    #   run: echo ${{ steps.vars.outputs.short_sha }}

      # Deploy ARM Template using Bicep DSL
    - name: Infrastructure Deploy
      id: Infra
      uses: azure/arm-deploy@v1
      continue-on-error: false
      with:
        resourceGroupName: ${{ env.Azure_Resource_GroupName }}
        template: ./IaC/main.bicep
        parameters: ./IaC/main.params.json Deployed_Environment='Dev'
        failOnStdErr: false

    # Lock Resource Group
    - name: Ensure Resource Group is Locked
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock create --lock-type CanNotDelete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }} --notes 'Prevent deletion of the resource group'

    # Get Set OpenAPIKey password in Key Vault
    # az keyvault secret set --name <secret-name> --value <secret-value> --vault-name <key-vault-name>
    - name: 'Create Key Vault secret for APIKEY'
      id: GetKVACRValues
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az config set extension.use_dynamic_install=yes_without_prompt
          result=$(az keyvault secret set \
                      --name "OpenAIAPIKey" \
                      --vault-name "${{ needs.deploy_infrastructure.outputs.output_keyvaultName }}" \
                      --value ${{ secrets.OpenAI_APIKEY }})

        # echo "::set-output name=acrusername::$result"
        # result=$(az keyvault secret show \
        #   --name "acrpassword" \
        #   --vault-name "${{ needs.deploy_infrastructure.outputs.output_keyvaultName }}" \
        #   --query "value" --output tsv)
        # echo "::set-output name=acruserpassword::$result"

    - name: DEBUG ONLY Display Output Variables
      run: |
         echo 'output_webSiteName: ${{ steps.Infra.outputs.out_webSiteName }}'
         echo 'output_keyvaultName: ${{ steps.Infra.outputs.out_keyvaultName }}'
         echo 'output_appInsightsName: ${{ steps.Infra.outputs.out_appInsightsName }}'
         echo 'output_functionAppName: ${{ steps.Infra.outputs.out_functionAppName }}'
         echo 'output_apiServiceName: ${{ steps.Infra.outputs.out_apiServiceName }}'
         echo 'output_apimSubscriptionKey: ${{ steps.Infra.outputs.out_apimSubscriptionKey }}'
         echo 'output_OpenAIKeyValue: ${{ steps.Infra.outputs.out_OpenAIKeyValue }}'
         echo 'output_appInsightsApplicationId: = ${{ steps.Infra.outputs.out_appInsightsApplicationId }}'
         echo 'output_appInsightsAPIApplicationId: = ${{ steps.Infra.outputs.out_appInsightsAPIApplicationId }}'
#         echo 'output_out_AzureOpenAIKeyValue: = ${{ steps.Infra.outputs.out_AzureOpenAIKeyValue }}'

  ################################################################
  # Stage: Deploy to Web App
  ################################################################              
  deploy_application_to_webapp:
    name: Deploy Application
    needs: [deploy_infrastructure]
    environment:
      name: 'Development-WebApps'
      url: 'https://${{ needs.deploy_infrastructure.outputs.output_webSiteName }}.azurewebsites.net/'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ env.AZURE_CREDENTIALS_MCAPS }}

    - name: DEBUG ONLY Display Output Variables
      run: |
         echo 'output_webSiteName: ${{ needs.deploy_infrastructure.outputs.output_webSiteName }}'
         echo 'output_keyvaultName: ${{ needs.deploy_infrastructure.outputs.output_keyvaultName }}'
         echo 'output_appInsightsName: ${{ needs.deploy_infrastructure.outputs.output_appInsightsName }}'
         echo 'output_functionAppName: ${{ needs.deploy_infrastructure.outputs.output_functionAppName }}'
         echo 'output_apiServiceName: ${{ needs.deploy_infrastructure.outputs.output_apiServiceName }}'
         echo 'output_apimSubscriptionKey: ${{ needs.deploy_infrastructure.outputs.output_apimSubscriptionKey }}'
         echo 'output_OpenAIKeyValue: ${{ needs.deploy_infrastructure.outputs.output_OpenAIKeyValue }}'
         echo 'output_appInsightsApplicationId: = ${{ needs.deploy_infrastructure.outputs.output_appInsightsApplicationId }}'
         echo 'output_appInsightsAPIApplicationId: = ${{ needs.deploy_infrastructure.outputs.output_appInsightsAPIApplicationId }}'
#         echo 'output_out_AzureOpenAIKeyValue: = ${{ needs.deploy_infrastructure.outputs.output_AzureOpenAIKeyValue }}'
         
    # Unlock Resource Group
    - name: Ensure Resource Group is UnLocked
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock delete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }}

    # - name: Download Build Artifacts-Website Application
    #   uses: actions/download-artifact@v2
    #   continue-on-error: false
    #   with:
    #     name: MercuryHealth.Website
    #     path: ${{ github.workspace }}/MercuryHealth.Website

    # - name: 'Deploy Website Application'
    #   uses: azure/webapps-deploy@v2
    #   with:
    #       app-name: ${{ needs.deploy_infrastructure.outputs.output_webSiteName }}
    #       package: './MercuryHealth.Website'

    # - name: Download Build Artifacts-Function Application
    #   uses: actions/download-artifact@v2
    #   continue-on-error: false
    #   with:
    #     name: MercuryHealth.FunctionApp
    #     path: ${{ github.workspace }}/MercuryHealth.FunctionApp
    
    # Deploy Function Application
    # - name: 'Deploy Function Application'
    #   uses: Azure/functions-action@v1
    #   with:
    #     app-name: ${{ needs.deploy_infrastructure.outputs.output_functionAppName }}
    #     slot-name: 'production'
    #     package: './MercuryHealth.FunctionApp'

    # Lock Resource Group
    - name: Ensure Resource Group is Locked
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock create --lock-type CanNotDelete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }} --notes 'Prevent deletion of the resource group'

    # Logout of Azure and Clear the Cache
    - name: Logout of Azure and Clear the Cache
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az logout
          az cache purge
          az account clear

